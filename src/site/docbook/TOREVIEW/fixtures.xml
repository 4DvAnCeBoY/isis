<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<!DOCTYPE article PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.1//EN"
"http://www.oasis-open.org/docbook/xml/simple/1.1/sdocbook.dtd">
<article>
  <articleinfo>
    <title>Fixtures</title>

    <author>
      <firstname></firstname>

      <surname></surname>

      <affiliation>
        <orgname></orgname>
      </affiliation>
    </author>

    <pubdate></pubdate>
  </articleinfo>

  <section>
    <title>Fixtures</title>

    <para>Fixtures are simple classes that are used to set up a [[NAME]]
    system. The code for a fixture should be placed in the
    <literal>install</literal> method, which is run when the system installs
    the fixtures. Fixtures are only installed if the
    <literal>ObjectAdapterPersistor</literal> flags that it is uninitialised via
    its <literal>isInitialized</literal> method. For the in memory object
    store this will be every time it is started, and for other object stores
    will only be when they detect they have no persistent data.</para>

    <section>
      <title>Registering fixtures</title>

      <para>Fixtures are registered with the Framework at startup via the
      properties file, using the fixtures properties. The
      <literal>fixtures</literal> property itself dictates which fixture
      classes are to be instantiated at startup, for example:</para>

      <programlisting format="linespecific">isis.fixtures = fixture.BookingsFixture, fixture.PerspectivesFixture</programlisting>

      <para>The <literal>prefix</literal> property allows you specify the
      common package name once and, hence omit them from the classes in the
      list. The following set of properties is therefore equivalent to the
      previous example.</para>

      <programlisting format="linespecific">isis.fixtures.prefix = fixture
isis.fixtures = BookingsFixture, PerspectivesFixture</programlisting>
    </section>
  </section>
</article>
