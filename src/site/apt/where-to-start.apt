~~  Licensed to the Apache Software Foundation (ASF) under one
~~  or more contributor license agreements.  See the NOTICE file
~~  distributed with this work for additional information
~~  regarding copyright ownership.  The ASF licenses this file
~~  to you under the Apache License, Version 2.0 (the
~~  "License"); you may not use this file except in compliance
~~  with the License.  You may obtain a copy of the License at
~~
~~        http://www.apache.org/licenses/LICENSE-2.0
~~
~~  Unless required by applicable law or agreed to in writing,
~~  software distributed under the License is distributed on an
~~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~  KIND, either express or implied.  See the License for the
~~  specific language governing permissions and limitations
~~  under the License.



Where's to Start?

  There's quite a lot to <Apache Isis>, with lots of optional components.  To 
  keep things manageable, all Isis documentation about these components is 
  scoped closest along with that component.  That means that 
  any given documentation is likely to have just the information you 
  require to use or configure that component (it also makes it easier for us
  to maintain those documents).
  
  On the other hand, it can be difficult to know exactly where to go in the 
  first place... hence these notes.
  
  <<Your first port of call should be the {{{./applib/docbkx/pdf/isis-applib.pdf}applib}}  
  documentation>>.  This describes how to go about writing a domain application following
  Isis' programming model.
  
  After that, you probably should look through the {{{./core/docbkx/pdf/isis-core.pdf}core}}
  documentation.  This provides more detail on the design and architecture of Isis, along
  with the key APIs.  It also describes how to deploy your application in various configurations
  (webapp, standalone or client/server).
  
  Once you have an understanding of those APIs, you may want to start using customizing the
  {{{./default}default}} implementations (where supported), or start to use some of the 
  {{{./alternative}alternative}} implementations.  The alternative implementations tend to be
  more sophisticated and offer more in the way of customization.  In either case, you'll find 
  the information you need in the user guides for each of the components.
  
What Else is There?  
  
  Isis comes with a couple of Maven archetypes to help you get started quickly: 
  
  * the {{{./support/archetypes/demo/index.html}demo}} archetype
  
    is a multi-module archetype that creates a small but complete demo <Apache Isis> application (<<<Customer>>>,
    <<<Order>>>, <<<OrderItem>>>, <<<Product>>>).  It has child modules for all of the main 
    components, giving you a good idea of how they are meant to work in practice.
   
  * the {{{./support/archetypes/isis-app/index.html}isis-app}} archetype
  
    is almost identical to the <demo> archetype, but has a very minimal domain model.
    The idea is that you use this archetype to create your project, then delete (or ignore) the child modules that
    you don't care about.

  []
  
  You might also be interested in the {{{./support/domain/index.html}domain}} library, which 
  provides off-the-shelf domain services and value types integrations for you to reuse.  

  Finally, to speed up your coding we provide some templates and other help for IDEs; check out
  the {{{./ide-support.html}IDE support}} page.  
    
   
  []
