	<!-- project directories -->
	<!-- source -->
	<property name="src.dir" value="src"/>
	<property name="test.dir" value="test"/>
	<property name="example.dir" value="example"/>
	
	<!-- resources -->
	<property name="lib.dir" value="../lib"/>
	<property name="images.dir" value="images"/>
	<property name="doc.dir" value="docs"/>
	<property name="icon.dir" value="icon-library"/>
	<property name="conf.dir" value="conf"/>
	<property name="resource.dir" value="resources"/>
	<property name="bin.dir" value="bin"/>

	<!-- output directories -->
	<!-- build directories -->
	<property name="build.dir" value="build"/>
	<property name="build.src.dir" value="${build.dir}/src"/>
	<property name="build.test.dir" value="${build.dir}/test"/>
	<property name="build.classes.src" value="${build.dir}/classes/src"/>
	<property name="build.classes.test" value="${build.dir}/classes/test"/>
	<property name="build.example.dir" value="${build.dir}/examples"/>
	<property name="build.doc.dir" value="${build.dir}/docs"/>
	<property name="build.doc.api" value="${build.doc.dir}/api"/>
	<property name="build.relase.dir" value="${build.dir}/release"/>

	<!-- test directories -->
	<property name="test.run.dir" value="${build.dir}/test-run"/>
	<!--property name="test.results.dir" value="${build.relase.dir}/tests"/-->
	<property name="test.results.dir" value="${build.dir}/test-results"/>
	
	<property environment="env"/>



	<!--                        -->
	<!--        init            -->
	<!--                        -->
	<target name="-init">
		<mkdir dir="${build.dir}"/>
		
		<!-- copy across source and add version -->
		<mkdir dir="${build.src.dir}"/>
		<copy todir="${build.src.dir}">
			<fileset dir="${src.dir}"/>
		</copy>

		<mkdir dir="${build.test.dir}"/>
		<copy todir="${build.test.dir}">
			<fileset dir="${test.dir}"/>
		</copy>

		<tstamp/>
	</target>

	<target name="all" depends="clean, test"/>
	
	<!--                               -->
	<!-- remove build/dist/test directories -->
	<!--                               -->
	<target name="clean" description="Remove build, dist and test directories.">
		<delete failonerror="false" dir="${build.dir}"/>
	</target>


	<!--                              -->
	<!--  compile the srcs  -->
	<!--                              -->
	<target name="compile.src" depends="-init" description="Compile the component">
		<mkdir dir="${build.classes.src}"/>
		<javac 
			srcdir="${build.src.dir}" 
			destdir="${build.classes.src}" 
			includes="**/*.java"
			target="${compile.target}" 
			debug="${compile.debug}" 
			deprecation="false" >
			
			<classpath refid="libs.internal"/>
			<classpath refid="libs.external"/>
		</javac>
	</target>

	<!--                              -->
	<!--  compile the tests  -->
	<!--                              -->
	<target name="compile.tests" depends="-init" description="Compile the component's tests">
		<mkdir dir="${build.classes.test}"/>
		<javac 
			destdir="${build.classes.test}" 
			includes="**/*.java"
			target="${compile.target}" 
			debug="${compile.debug}" 
			deprecation="false" >

			<src path="${build.test.dir}"/>
	
			<classpath refid="libs.internal"/>
			<classpath refid="libs.external"/>
			<classpath path="${build.classes.src}"/>
		</javac>
	</target>


	<!--                              -->
	<!--    run all the unit tests    -->
	<!--                              -->
	<target name="test" depends="compile.src, compile.tests" description="Runs all unit tests">
		<delete failonerror="false" dir="${test.run.dir}"/>

		<mkdir dir="${test.run.dir}"/>

		<patternset id="test.sources">
			<include name="**/*Test.java"/>
			<include name="**/*Tests.java"/>
		</patternset>

		<junit fork="yes" printsummary="no" haltonfailure="no" dir="${test.run.dir}"
			errorproperty="junit-failure" failureproperty="junit-failure">
			<classpath refid="libs.internal"/>
			<classpath refid="libs.external"/>
			<classpath path="${build.classes.src}"/>
			<classpath path="${build.classes.test}"/>
	
			<formatter type="xml"/>

			<batchtest todir="${test.run.dir}">
				<fileset dir="${test.dir}">
					<patternset refid="test.sources"/>
				</fileset>
			</batchtest>
		</junit>

		<junitreport tofile="${test.run.dir}/all-tests.xml">
			<fileset dir="${test.run.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${test.results.dir}"/>
		</junitreport>

		<fail unless="${junit-failure}" message="JUnit tests failed"/>
	</target>





