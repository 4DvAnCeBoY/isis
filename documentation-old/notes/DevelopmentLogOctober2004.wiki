''''5th Nov 2004

Spent most of today, and yesterday evening, working on scolling and resize borders.  Completed both in a demo, but ran into a problem when running with composite views.  Originally the IntegrationHandler/Viewer determined which view is under the pointer, but this does not work with the scrolling border as the actual view that is being show with the scroll are is offset.  Getting the IntegrationHandler/Viewer to deal with this peculiarity would mean that they need to know how scrolling works.  To resolve this the job of identifying the view under the cursor is now delegate to the views and passes down the hierachy of subview.  This way the ScrollBorder decorator can compensate for the offset. 

'''' 2nd Nov. 2004

Commented out the hashcode method in AbstractNakedObject class.  This fixed the non closeable view mentioned below.  Need to confirm that this will not affect any other parts of the system.

Changed the structure of XATs so that the test object factory is told when test start and end.  This allows different test aggregation shemes to be used (see XAT).  The HTML documentor no compiles all test output into a file for the class.  





'''1st Nov. 2004

Looked at the issue with transient-made-persistent not being able to be closed.  This turns out to be and issues with hash codes in NakedObjects where the hash changes when the object is made persistent (as the OID is set, and the hash is based on the OID).  Need to figure out whether the hash should change in this way, and if it should how do we changed the update-notifier so that the views for an object can be found.

Added a new view to show Naked Error objects (specifically will show Error objects).  To make this work the view specification needs to be added to the factory.  Via the properties files this is down by adding in the NakedErrorViewSpecification as follows:-

 nakedobjects.viewer.skylark.specification.view=org.nakedobjects.viewer.skylark.metal.NakedErrorViewSpecification,\
     org.nakedobjects.viewer.skylark.metal.ListSpecification,\
 

----
'''29th Oct. 2004

Whilst helping Colm yesterday I notice that the debug view does not detail what about methods have been found. These details, and details about all the methods found need to be displayed in the debug dialog.

Need to ensure that all views are refreshed when the object it is representing changes.

Worked though two cards: sorted out refresh problem, and 

Refactored About classes into interfaces and default implmentation.

LundBuild is now working and building the core component when commited.  Now need to reconfigure the builds so that they use the complete source to build with, rather than using a precompiled jar.  Also the output of the build needs to go into the artifacts directory so they can be accessed.


----
'''28 Oct 2004

The dot net reflector is currently returning Naked as its superclass, and Naked's superclass is also Naked, so we go into a loop when trying to find images for classes.  Fixed this by returning a 'null' instead.

Have managed to get errors from the Dot Net reflector, which get round the bug in J# where reflectively invoked method (using Java's reflection classes) are not working.  The type useful error message can be seen below.

  Object reference not set to an instance of an object.
     at Officer.actionLogon() in C:\Documents and Settings\rcm\My Documents\sdm-exploration\src\bom\officer\Officer.vb:line 341



Split the .net projects into three parts, so there is now a the core, a separate dot-net reflection mechanism, and some tests.  The tests are separate so that they can be compiled and run as a Windows application (so there output appears in the Visual Studio console), while the reflector compiles into a DLL.

I have references these DLL directly from the exploration project so that after recompiling the framework the exploration will run without having to copy across the DLLs.

Added an initial logging statement to record the version and build numbers in the log (taken from AboutNakedObjects).  I now recommend that logging is configured as below so that basic errors and warnings are shown to the user and full logging details are captured to file.

 ## log4j
 # apache's log4j is used to provide system logging.
 ##
 log4j.rootCategory=DEBUG, File, Console
 
 log4j.logger.org.nakedobjects.viewer.skylark=WARN
 log4j.logger.org.nakedobjects.viewer.skylark.value.TextField=WARN
 log4j.logger.org.nakedobjects.viewer.skylark.value.TextFieldBlock=WARN
 log4j.logger.org.nakedobjects.viewer.skylark.value.TextFieldContent=WARN

 # The console appender
 log4j.appender.Console=org.apache.log4j.ConsoleAppender
 log4j.appender.Console.threshold=WARN
 log4j.appender.Console.target=System.out
 log4j.appender.Console.layout=org.apache.log4j.PatternLayout
 log4j.appender.Console.layout.ConversionPattern=%-5r [%-20c{1}] %-5p  %m  -- %l%n
 #log4j.appender.Console.layout.ConversionPattern=%d [%c{1}] %-5p  %m%n
 #log4j.appender.Console.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n

 log4j.appender.File=org.apache.log4j.FileAppender
 log4j.appender.File.file=nakedobjects.log
 log4j.appender.File.layout=org.apache.log4j.PatternLayout
 log4j.appender.File.layout.ConversionPattern=%d [%-20c{1}] %-5p  %m%n


