<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD Simplified DocBook XML V1.1//EN"
"http://www.oasis-open.org/docbook/xml/simple/1.1/sdocbook.dtd">
<article>
  <articleinfo>
    <title>Getting Started</title>

    <author>
      <firstname></firstname>

      <surname></surname>

      <affiliation>
        <orgname></orgname>
      </affiliation>
    </author>

    <pubdate></pubdate>
  </articleinfo>

  <note>
    <para><emphasis>Note - In future there will be a download complete with
    examples. For the moment there is only a Maven archetype that creates a
    new application</emphasis></para>
  </note>

  <section>
    <title>Building a new web application with Maven</title>

    <para>You can use Maven archetypes to quickly set up a Scimpi web
    application. Run the following command specifying a suitable group and
    artifact ID. The group ID is typically based on you domain name, while the
    artifact ID uniquely represents the web application you are
    creating.</para>

    <literallayout>$ mvn archetype:generate -DarchetypeCatalog=http://isis.apache.org/snapshot-catalog.xml</literallayout>

    <para>When this command is running you will be prompted about how to set
    up the application, as the following example shows:-</para>

    <programlisting>[INFO] Scanning for projects...
[INFO] Searching repository for plugin with prefix: 'archetype'.
[INFO] ------------------------------------------------------------------------
[INFO] Building Maven Default Project
[INFO]    task-segment: [archetype:generate] (aggregator-style)
[INFO] ------------------------------------------------------------------------
[INFO] Preparing archetype:generate
[INFO] No goals needed for project - skipping
[INFO] Setting property: classpath.resource.loader.class =&gt; 'org.codehaus.plexus.velocity.ContextClassLoaderResourceLoader'.
[INFO] Setting property: velocimacro.messages.on =&gt; 'false'.
[INFO] Setting property: resource.loader =&gt; 'classpath'.
[INFO] Setting property: resource.manager.logwhenfound =&gt; 'false'.
[INFO] [archetype:generate {execution: default-cli}]
[INFO] Generating project in Interactive mode
[INFO] No archetype defined. Using maven-archetype-quickstart (org.apache.maven.archetypes:maven-archetype-quickstart:1.0)
Choose archetype:
1: http://isis.apache.org/snapshot-catalog.xml -&gt; application-archetype ([[NAME]] Application)
2: http://isis.apache.org/snapshot-catalog.xml -&gt; scimpi-archetype-quickstart (A simple Scimpi application)
Choose a number:  (1/2): <emphasis role="strong">2</emphasis>
[INFO] snapshot org.apache.isis:scimpi-archetype-quickstart:0.4-SNAPSHOT: checking for updates from scimpi-archetype-quickstart-repo
Define value for groupId: : <emphasis role="strong">org.example</emphasis>
Define value for artifactId: : <emphasis role="strong">mywebapp</emphasis>
Define value for version:  1.0-SNAPSHOT: : 
Define value for package:  org.example: : 
Confirm properties configuration:
groupId: org.example
artifactId: mywebapp
version: 1.0-SNAPSHOT
package: org.example
 Y: : y
[INFO] ----------------------------------------------------------------------------
[INFO] Using following parameters for creating OldArchetype: scimpi-archetype-quickstart:0.4-SNAPSHOT
[INFO] ----------------------------------------------------------------------------
[INFO] Parameter: groupId, Value: org.example
[INFO] Parameter: packageName, Value: org.example
[INFO] Parameter: package, Value: org.example
[INFO] Parameter: artifactId, Value: mywebapp
[INFO] Parameter: basedir, Value: /home/rcm/tmp
[INFO] Parameter: version, Value: 1.0-SNAPSHOT
[INFO] ********************* End of debug info from resources from generated POM ***********************
[INFO] OldArchetype created in dir: /home/rcm/tmp/mywebapp
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 52 seconds
[INFO] Finished at: Tue Nov 17 22:27:03 GMT 2009
[INFO] Final Memory: 8M/14M
[INFO] ------------------------------------------------------------------------
$ </programlisting>

    <para>Choose the Scimpi archetype
    (<emphasis>scimpi-archetype-quickstart</emphasis>) and provide a group and
    artifact IDs; together these should uniquely identify you application (see
    <ulink url="http://maven.apache.org">Maven</ulink> for more details)
    .</para>

    <para>The resulting directory (with the name from the artifact ID)
    contains a Maven style project for a complete example web application. So
    for the above example directory would also be
    <filename>mywebapp</filename>. The directory contains the
    following:-</para>

    <programlisting>mywebapp
|-- pom.xml
`-- src
    `-- main
        |-- java
        |   `-- org
        |       `-- example
        |-- resources
        `-- webapp
            |-- META-INF
            |   `-- MANIFEST.MF
            |-- WEB-INF
            |   |-- allow
            |   |-- logging.properties
            |   |-- isis.properties
            |   |-- passwords
            |   `-- web.xml
            |-- generic
            |   |-- action.shtml
            |   |-- collection.shtml
            |   |-- edit.shtml
            |   `-- object.shtml
            |-- images
            |   |-- Default.png
            |   |-- DomainObject.gif
            |   |-- banner.jpg
            |   |-- bg-button.gif
            |   `-- logo.png
            |-- index.shtml
            |-- login.shtml
            `-- style
                |-- screen.css
                `-- template.shtml
</programlisting>

    <para>From within the artifact directory you can build the application by
    running Maven with the install goal:-</para>

    <literallayout>$ cd mywebapp
$ mvn install</literallayout>

    <para>The newly created <filename moreinfo="none">target</filename>
    directory contains a war file with the name of the artifact, e.g.
    <filename moreinfo="none">mywebapp-1.0-SNAPSHOT.war</filename>. This file
    can then be manually deployed to a suitable web server or Maven can run a
    web server for you.</para>

    <literallayout>$ mvn jetty:run</literallayout>

    <para>Once set up the source code for the domain model, in <filename
    moreinfo="none">src/main/java/</filename>, can be replaced or modified,
    and specific views can be added to <filename
    moreinfo="none">src/main/webapp/</filename>. Rebuild and redeploy through
    the same process to see the results.</para>

    <para></para>
  </section>
</article>
