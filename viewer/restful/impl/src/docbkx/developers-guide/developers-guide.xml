<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<book>
  <bookinfo>
    <title>Restful Objects 1.0: Developers' Guide</title>

    <subtitle>Framework Development Manual</subtitle>

    <releaseinfo>Version 0.1</releaseinfo>

    <authorgroup>
      <author>
        <firstname>Dan</firstname>

        <surname>Haywood</surname>
      </author>
    </authorgroup>

    <legalnotice>
      <para>Permission is granted to make and distribute verbatim copies of
      this manual provided that the copyright notice and this permission
      notice are preserved on all copies.</para>
    </legalnotice>
  </bookinfo>

  <!-- front matter -->

  <toc></toc>

  <preface id="preface">
    <title>Preface</title>

    <para><ulink url="http://restfulobjects.sourceforge.net">Restful
    Objects</ulink> is a <ulink url="http://starobjects.org">sister
    project</ulink> for the <ulink url="http://nakedobjects.org">Naked
    Objects</ulink> framework, providing a <acronym>REST</acronym> web service
    for your domain objects.</para>

    <para>This developers' guide explains how to build <emphasis>Restful
    Objects</emphasis> from source, allowing you to contribute back and extend
    the range of capabilities. If you are simply interested in using
    <emphasis>Restful Objects</emphasis> as-is, please consult the user
    guide.</para>

    <para><emphasis>Restful Objects</emphasis> is hosted on <ulink
    url="http://restfulobjects.sourceforge.net">SourceForge</ulink>, and is
    licensed under <ulink
    url="http://www.apache.org/licenses/LICENSE-2.0.html">Apache Software
    License v2</ulink>. <emphasis>Naked Objects</emphasis> is also hosted on
    <ulink
    url="http://sourceforge.net/projects/nakedobjects">SourceForge</ulink>,
    and is also licensed under Apache Software License v2.</para>
  </preface>

  <!-- main content -->

  <chapter>
    <title>Introduction</title>

    <abstract>
      <para>This chapter introduces the organization of this developers'
      guide.</para>
    </abstract>

    <para><emphasis>Restful Objects</emphasis> is one of a number of sister
    projects for Naked Objects. Each of these sister projects are organized
    along the same general lines: they have the same directory structure, the
    same coding conventions, a shared "corporate" Maven <acronym>POM</acronym>
    to define build artifacts, the same release process and so on.</para>

    <para>The <ulink url="http://starobjects.sourceforge.net">Star Objects
    project</ulink> is an umbrella for all of these sister projects. As such
    it holds the corporate <acronym>POM</acronym> and a number of other shared
    artifacts, such as a site template so that the Maven sites for all sister
    projects have the same general look-n-feel. It also hosts a Maven snapshot
    repository and release repository.</para>

    <para>In addition, the <emphasis>Star Objects</emphasis> also has a
    developers guide (available online <ulink
    url="http://starobjects.sourceforge.net/m2-site/main/documentation/docbkx/pdf/developers-guide.pdf">here</ulink>).
    This describes how to build any given sister project from source, how to
    be a contributor, and how (as a project admin) to release code artifacts
    to the repositories and how to deploy the site.</para>

    <para><emphasis>This</emphasis> developers guide therefore provides only a
    high level outline of the structure of the modules, and provides only
    summary steps for how to build and deploy the sister projects. Any
    variations from the standard procedures described in the <emphasis>Star
    Objects</emphasis> developers guide are also given.</para>

    <para>Tihs guide also provides design/implementation notes, in <xref
    linkend="chp.DesignNotes" />. If you are thinking about or fixing a bug or
    contributing a new feature, you might find some starting points here (over
    and above reading the Javadocs, tests and code, of course).</para>
  </chapter>

  <chapter id="chp.Modules">
    <title>Modules</title>

    <abstract>
      <para>This chapter describes the modules that make up <emphasis>Restful
      Objects</emphasis>'.</para>
    </abstract>

    <para>The modules that make up <emphasis>Restful Objects</emphasis> follow
    the general conventions of sister projects, with a
    <emphasis>main</emphasis> module, a <emphasis>support</emphasis> module
    and a <emphasis>testapp</emphasis> module. You can read more about this in
    the <emphasis>Star Objects</emphasis> developer guide.</para>

    <sect1>
      <title>Directory Structure</title>

      <para>The source code directory structure for <emphasis>Restful
      Objects</emphasis> is as follows:</para>

      <screen>trunk/
  main/               # main release for Restful, including Maven site
    applib/             # the Restful application library, for client-side code
    viewer/             # the Restful viewer implementation
    documentation/      # this documentation
  support/            # Support for application developers
    release/            # defines dependencies for projects using the 'viewer' submodule
    archetype/          # (placeholder)
  testapp/            # application for testing - not released
tags/
  main                # tags for trunk/main
  archetype           # tags for trunk/archetype</screen>

      <para>As is usual, to ensure that tags go into the correct location when
      releasing, the <classname>mvn-release-plugin</classname> plugin has been
      configured (using <sgmltag>&lt;tagBase&gt;</sgmltag>) to override its
      default location.</para>

      <para>You can checkout the entire trunk using Subversion:</para>

      <para><screen>svn co https://restfulobjects.svn.sourceforge.net/svnroot/restfulobjects/trunk ~/restfulobjects/trunk</screen></para>
    </sect1>

    <sect1>
      <title>Main Modules</title>

      <para>As the above shows, there are two separate released
      artifacts:</para>

      <para>The <emphasis>main</emphasis>
      (<classname>org.starobjects.restful:main</classname>) is a multimodule
      project that defines the main artifacts that implement <emphasis>Restful
      Objects</emphasis>. It contains:</para>

      <itemizedlist>
        <listitem>
          <para>the <emphasis>applib</emphasis>
          (<classname>org.starobjects.restful:applib</classname>)</para>

          <para>The application library defines a set of interfaces
          representing the resources annotated using javax.ws.rs (JSR311)
          annotations. These in effect define the endpoints available for
          clients. The library also contains some helper utility
          classes.</para>

          <para>The applib uses
          <classname>org.starobjects.restful:main</classname> as its
          parent.</para>
        </listitem>

        <listitem>
          <para>the <emphasis>viewer</emphasis>
          (<classname>org.starobjects.restful:viewer</classname>)</para>

          <para>The viewer provides an implementation of the applib resources,
          exposing the domain objects as RESTful resources in
          <acronym>XHTML</acronym> 5. The resource include forms to allow
          testing from web browsers. To support browsers predating XHTML 5,
          Javascript is also served up (only Firefox 3.0 has been
          tested).</para>

          <para>The viewer also uses
          <classname>org.starobjects.restful:main</classname> as its
          parent.</para>
        </listitem>

        <listitem>
          <para>the <emphasis>documentation</emphasis>
          (<classname>org.starobjects.restful:documentation</classname>)</para>

          <para>The documentation submodule contains the user and developers'
          guides. It also uses
          <classname>org.starobjects.restful:main</classname> as its
          parent.</para>
        </listitem>
      </itemizedlist>

      <para>It uses the corporate <acronym>POM</acronym>
      (<package>org.starobjects.star:corporate</package>) as its
      parent.</para>
    </sect1>

    <sect1>
      <title>Support Modules</title>

      <para>The <emphasis>support</emphasis> release
      (<classname>org.starobjects.restful:support</classname>) is a
      multimodule project that provides artifacts to help application
      developers use <emphasis>Restful Objects</emphasis> in their own
      projects. It contains:</para>

      <itemizedlist>
        <listitem>
          <para>the <emphasis>release</emphasis> module
          (<classname>org.starobjects.restful:release</classname>)</para>

          <para>This is a convenience module that can be used as a parent by
          projects using <emphasis>Restful Objects</emphasis>. Its primary
          purpose is to define a consistent set of versions in
          <sgmltag>&lt;dependencyManagement&gt;</sgmltag> tag.</para>

          <para>Note that this module does not inherit from the
          <emphasis>support</emphasis> <acronym>POM</acronym>, instead it
          inherits from the <emphasis>Naked Objects Framework</emphasis>'s
          equivalent <classname>org.nakedobjects:release</classname> module
          (thus defining a stack of dependencies).</para>
        </listitem>

        <listitem>
          <para>the <emphasis>archetype</emphasis> module</para>

          <para>The projects generated by the archetype [will] use the
          <emphasis>release</emphasis> module.</para>

      <note><para>At the time of writing the archetype artifact is
                  incomplete and is not included in the build.</para></note>
        </listitem>
      </itemizedlist>

      <para>Like <emphasis>main</emphasis>, the <emphasis>support</emphasis>
      module also uses the corporate <acronym>POM</acronym>
      (<package>org.starobjects.star:corporate</package>) as its
      parent.</para>
    </sect1>

    <sect1>
      <title>TestApp Module</title>

      <para>The testapp module is a test application for adhoc testing of
      FitNesse. It is not a released artifact.</para>
    </sect1>
  </chapter>

  <chapter id="chp.BuildingFromSource">
    <title>Building, Documenting and Deploying</title>

    <abstract>
      <para>This chapter outlines how to build, document and deploy
      <emphasis>Restful Objects</emphasis>.</para>
    </abstract>

    <para>The build, documentation and deployment process follows the general
    standard for sister projects, as documented in the <emphasis>Star
    Objects</emphasis> developers' guide. The sections in this chapter
    correspond to the parts one, two and three of <emphasis>Star
    Objects</emphasis> developers' guide.</para>

    <sect1>
      <title>Building from Source</title>

      <para>There are no special steps required for building <emphasis>Restful
      Objects</emphasis> from source.</para>

      <para>You can therefore just follow the processes described in
      <emphasis>Star Objects</emphasis> developers' guide:</para>

      <itemizedlist>
        <listitem>
          <para>build the main:</para>

          <screen>$ cd ~/restfulobjects/trunk/main
$ mvn clean install</screen>
        </listitem>

        <listitem>
          <para>build the support:</para>

          <screen>$ cd ~/restfulobjects/trunk/support
$ mvn clean install</screen>
        </listitem>
      </itemizedlist>
    </sect1>

    <sect1>
      <title>Contributing Changes</title>

      <para>There are no special considerations for contributing changes for
      <emphasis>Restful Objects</emphasis>. You can therefore just follow the
      processes described in <emphasis>Star Objects</emphasis> developers'
      guide.</para>
    </sect1>

    <sect1 id="sec.ReleaseProcess">
      <title>Release Process</title>

      <para>There are no special considerations for releasing/deploying for
      <emphasis>Restful Objects</emphasis>. You can therefore just follow the
      processes described in <emphasis>Star Objects</emphasis> developers'
      guide, to:</para>

      <itemizedlist>
        <listitem>
          <para>for deployments, update
          <filename>~/.m2/settings.xml</filename>:</para>

          <screen>&lt;servers&gt;
  &lt;server&gt;
    &lt;id&gt;restfulobjects-site&lt;/id&gt;
    &lt;username&gt;xxx&lt;/username&gt;
    &lt;password&gt;xxx&lt;/password&gt;
  &lt;/server&gt;
&lt;/servers&gt;</screen>
        </listitem>

        <listitem>
          <para>make documentation changes to DocBook and to the site</para>
        </listitem>

        <listitem>
          <para>deploy the site locally</para>

          <screen>$ cd ~/restfulobjects/trunk/main
$ mvn site-deploy -D dist=local</screen>

          <para>This will deploy to
          <filename>/tmp/m2-sites/restfulobjects</filename>.</para>
        </listitem>

        <listitem>
          <para>deploy a code snapshot</para>

          <para>First, deploy <emphasis>main</emphasis>:</para>

          <screen>$ cd ~/restfulobjects/trunk/main
$ mvn clean install deploy -D dist=remote</screen>

          <para>Then, deploy <emphasis>support</emphasis>:</para>

          <screen>$ cd ~/restfulobjects/trunk/support
$ mvn clean install deploy -D dist=remote</screen>
        </listitem>

        <listitem>
          <para>tag a release and then deploy a code release</para>

          <remark>TODO: details required here.</remark>
        </listitem>

        <listitem>
          <para>deploy a site remotely</para>

          <para>then, deploy the site (you'll also need a sourceforge terminal
          session running; see <emphasis>Star Objects</emphasis> developers
          guide for details):</para>

          <screen>$ cd ~/restfulobjects/trunk/main
$ mvn site-deploy -D dist=remote</screen>
        </listitem>
      </itemizedlist>
    </sect1>
  </chapter>

  <chapter id="chp.DesignNotes">
    <title>Design Notes</title>

    <abstract>
      <para>This chapter will contain design notes on the implementation of
      <emphasis>Restful Objects</emphasis>.</para>
    </abstract>

    <para><remark>TODO: describe the internal design/architecture
    here...</remark></para>
  </chapter>
</book>
