<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"file:./src/docbkx/dtd-4.5/docbookx.dtd">
<book>
  <bookinfo>
    <title><?eval ${docbkxGuideTitle}?></title>

    <subtitle><?eval ${docbkxGuideSubTitle}?></subtitle>

    <releaseinfo><?eval ${project.version}?></releaseinfo>

    <authorgroup>
      <author>
        <firstname>Robert</firstname>

        <surname>Matthews</surname>
      </author>

      <author>
        <firstname>Kevin</firstname>

        <surname>Meyer</surname>
      </author>
    </authorgroup>

    <legalnotice>
      <para>Permission is granted to make and distribute verbatim copies of
      this manual provided that the copyright notice and this permission
      notice are preserved on all copies.</para>
    </legalnotice>
  </bookinfo>

  <!-- front matter -->

  <toc></toc>

  <preface id="preface">
    <title>Preface</title>

    <para><emphasis>Apache Isis</emphasis> is designed to allow programmers
    rapidly develop domain-driven applications following the <ulink
    url="http://en.wikipedia.org/wiki/Naked_Objects">Naked Objects</ulink>
    pattern. It is made up of a core framework plus a number of alternate
    implementations, and supports various viewers and object stores. Apache
    Isis is hosted at the <ulink url="http://incubator.apache.org/isis">Apache
    Foundation</ulink>, and is licensed under <ulink
    url="http://www.apache.org/licenses/LICENSE-2.0.html">Apache Software
    License v2</ulink>.</para>

    <para>This guide is written for ...</para>
  </preface>

  <!-- main content -->

  <chapter id="chp.Intro">
    <title>Introduction</title>

    <abstract>
      <para>*** yada yada</para>
    </abstract>

    <sect1>
      <title>***</title>

      <para><emphasis>*** yada yada</emphasis></para>

      <sect2>
        <title>Authentication through an LDAP server</title>

        <para>To authenticate through LDAP set</para>

        <programlisting format="linespecific">isis.authentication=ldap</programlisting>

        <para>LDAP needs a URL for the server and a 'dn' of the root of the
        users on the server. For example,</para>

        <programlisting format="linespecific">isis.authentication.ldap.dn= dc=isis, dc=org </programlisting>

        <programlisting format="linespecific">isis.authentication.ldap.server=ldap://localhost:10389</programlisting>

        <para>The logon password check will be on uid='username', &lt;dn&gt; -
        For example, attempting to logon with user 'sven' with the above
        settings will check against the server on localhost, port = 10389,
        uid=sven, dc=isis, dc=org, using the password in the standard <literal
        moreinfo="none">userpassword</literal> attribute in that entry. Once
        logged in, roles will be picked up from cn='rolename' where
        objectclass =organizationalRole in child entries of the user
        entry.</para>
      </sect2>

      <sect2>
        <title>Authorization through LDAP server</title>

        <para>To enable authorization by LDAP server include facet for
        authorization and specifying the <literal
        moreinfo="none">ldap</literal> implementation for
        authorization.</para>

        <programlisting format="linespecific">isis.reflector.facets.include=\
    org.apache.isis.runtime.authorization.standard.AuthorizationFacetFactoryImpl
isis.authorization=ldap</programlisting>

        <para>With LDAP authorization the current user's role will be
        authorised against an entry in the LDAP server for each method
        possibly available to them. The URL of the server is obtained from the
        same property as for authentication.</para>

        <para>The authorization entries should exist under a DN configured in
        the property file. For example.</para>

        <programlisting format="linespecific">isis.authorization.ldap.application.dn= cn=expenses, dc=apps, dc=isis, dc=org </programlisting>

        <para>This will be checked anonymously.</para>

        <para>Entries to be matched against should exist under this dn.
        Expected configuration is a hierarchy of class, method and parameters.
        The cn of each entry is expected to be the fully qualified class name,
        method or parameter list ('()' for an empty parameter list). If an
        entry has a 'uniquemember' attribute equal to 'role' then that entry
        and all sub-entries are authorised.</para>

        <para>For example</para>

        <para>DN:
        cn=com.isisgroup.expenses.services.hibernate.ClaimRepositoryHibernate,
        cn=expenses, dc=apps, dc=isis, dc=org</para>

        <para>with uniquemember = role1 will authorise all members of <literal
        moreinfo="none">com.isisgroup.expenses.services.hibernate.ClaimRepositoryHibernate</literal>
        for users with role1.</para>

        <para>DN: cn=(com.isisgroup.expenses.claimant.Claimant,
        java.lang.String),</para>

        <para>cn=createNewClaim,
        cn=com.isisgroup.expenses.services.hibernate.ClaimRepositoryHibernate,
        cn=expenses, dc=apps, dc=isis, dc=org</para>

        <para>with uniquemember = role1 will authorise the <literal
        moreinfo="none">createNewClaim(com.isisgroup.expenses.claimant.Claimant,
        String)</literal> member of <literal
        moreinfo="none">com.isisgroup.expenses.services.hibernate.ClaimRepositoryHibernate</literal>
        for users with role1.</para>
      </sect2>

      <sect2>
        <title>Authorization through LDAP server</title>

        <para>To enable authorization by LDAP server include facet for
        authorization and specifying the <literal
        moreinfo="none">ldap</literal> implementation for
        authorization.</para>

        <programlisting format="linespecific">isis.reflector.facets.include=\
    org.apache.isis.runtime.authorization.standard.AuthorizationFacetFactoryImpl
isis.authorization=ldap</programlisting>

        <para>With LDAP authorization the current user's role will be
        authorised against an entry in the LDAP server for each method
        possibly available to them. The URL of the server is obtained from the
        same property as for authentication.</para>

        <para>The authorization entries should exist under a DN configured in
        the property file. For example.</para>

        <programlisting format="linespecific">isis.authorization.ldap.application.dn= cn=expenses, dc=apps, dc=isis, dc=org </programlisting>

        <para>This will be checked anonymously.</para>

        <para>Entries to be matched against should exist under this dn.
        Expected configuration is a hierarchy of class, method and parameters.
        The cn of each entry is expected to be the fully qualified class name,
        method or parameter list ('()' for an empty parameter list). If an
        entry has a 'uniquemember' attribute equal to 'role' then that entry
        and all sub-entries are authorised.</para>

        <para>For example</para>

        <para>DN:
        cn=com.isisgroup.expenses.services.hibernate.ClaimRepositoryHibernate,
        cn=expenses, dc=apps, dc=isis, dc=org</para>

        <para>with uniquemember = role1 will authorise all members of <literal
        moreinfo="none">com.isisgroup.expenses.services.hibernate.ClaimRepositoryHibernate</literal>
        for users with role1.</para>

        <para>DN: cn=(com.isisgroup.expenses.claimant.Claimant,
        java.lang.String),</para>

        <para>cn=createNewClaim,
        cn=com.isisgroup.expenses.services.hibernate.ClaimRepositoryHibernate,
        cn=expenses, dc=apps, dc=isis, dc=org</para>

        <para>with uniquemember = role1 will authorise the <literal
        moreinfo="none">createNewClaim(com.isisgroup.expenses.claimant.Claimant,
        String)</literal> member of <literal
        moreinfo="none">com.isisgroup.expenses.services.hibernate.ClaimRepositoryHibernate</literal>
        for users with role1.</para>

        <para></para>

        <para></para>

        <para>There is an optional capability to authorise the visibility and
        usability of fields independently. Thus a field may be visible to
        certain roles but not editable. In order to configure this against a
        authorization a flag must be added as follows.</para>

        <para></para>

        <para>Add a flags attribute to the entry with the role. If it's set to
        'rw' editing will be allowed, any other value (typically 'ro') will
        disallow editing.</para>

        <para>In each case absence of the flag will mean that visibility and
        usability and are always the same.</para>

        <para></para>

        <para></para>

        <para>As a tool for helping to configure the initial security settings
        there is a 'learn' property.</para>

        <programlisting format="linespecific">isis.authorization.learn=true</programlisting>

        <para>When this is present and set, all methods will be authorised for
        all roles. However as each method is accessed through the user
        interface authorization will be configured for that method and the
        current role. Configuration will be saved in either the file (saved on
        shutdown), database table or LDAP security settings depending upon the
        reflector setup.</para>

        <para>The settings can then be modified to conform to the required
        security settings.</para>

        <para></para>

        <para></para>
      </sect2>
    </sect1>
  </chapter>

  <chapter>
    <title>***</title>

    <abstract>
      <para>*** yada yada</para>
    </abstract>

    <sect1>
      <title>***</title>

      <para><emphasis>*** yada yada</emphasis></para>
    </sect1>
  </chapter>

  <appendix>
    <title>***</title>

    <abstract>
      <para>*** yada yada</para>
    </abstract>

    <sect1 id="sec.module-ui">
      <title>***</title>

      <para>*** yada yada</para>
    </sect1>
  </appendix>
</book>
