<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section SYSTEM "../documentation.dtd">
<section>
  <title>Configuration</title>

  <para>The NOF supplies an implementation of
  <class>NakedObjectConfiguration</class>, called
  <class>org.nakedobjects.utility.configuration.PropertiesConfiguration</class>,
  that delegates the task of loading the properties to another object - a
  <class>org.nakedobjects.utility.configuration.ConfigurationLoader</class> -
  allowing the loading mechanism to be changed independently. The
  configuration loader simply passes back a java.util.Properties object that
  the properties configuration object will hold and extract each requested
  property from.</para>

  <para>A single implementation of the loader is also provided with the NOF -
  <class>org.nakedobjects.utility.configuration.FropertiesFileLoader</class>.
  This loader reads a <see label="java-properties-file">Java style properties
  file</see>.</para>

  <subheading>Installling this Component</subheading>

  <para>A properties based configuration is installed by instantiating the
  <class>PropertiesConfiguration</class> class and passing in the
  <class>PropertiesFileLoader</class>.</para>

  <para>Normal practice is to provide the properties in Java properties file
  and set up the configuration component using the provided properties
  loader:-</para>

  <program-listing>new PropertiesConfiguration(new PropertiesFiledLoader("file.properties", false);</program-listing>

  <para>The flag determines if the file must be found and loaded; if true and
  the file cannot be found an exception is thrown.</para>

  <subheading>Extending this Component</subheading>

  <para>Implement a new
  <class>org.nakedobjects.container.configuration.ConfigurationLoader</class>
  and return the set of properties via the <method>getProperties()</method>
  method.</para>
</section>