<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section SYSTEM "../documentation.dtd">
<section>
  <title>Object Loader</title>

  <para>An implementation is provided with the NOF that should satisfy most
  needs for an object loader. The
  <class>org.nakedobjects.object.loader.ObjectLoaderImpl</class> class uses an
  number of delegates to create the domain objects and adapters, and manage
  the mappings providing the flexibilty there. The object and adapter
  factories and normally provided by the reflection mechanism as they need to
  work with the domain objects that the reflection mechanism is making
  available.</para>

  <subheading>Installation</subheading>

  <para>The supplied loader is normally suitable but you do need to set up its
  four delegates:
  <class>org.nakedobjects.object.loader.PojoAdapterMap</class>,
  <class>org.nakedobjects.object.loader.IdentityAdapterMap</class>,
  <class>org.nakedobjects.object.ObjectFactory</class> and
  <class>org.nakedobjects.object.AdapterFactory</class>. The two maps have
  defaults installed during initialisation (when <method>init</method> is
  called) and normally will not need to be specified. These are set up using
  their accessor methods, so a common configuration would be:-</para>

  <program-listing>objectLoader = new ObjectLoaderImpl();
objectLoader.setObjectFactory();
objectLoader.setAdapterFactory();
:
NakedObjects.setObjectLoader(objectLoader);</program-listing>
</section>