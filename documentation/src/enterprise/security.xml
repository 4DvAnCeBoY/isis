<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section SYSTEM "../documentation.dtd">
<section>
  <title>How to Control User Access to Object and Methods</title>

  <para>A basic form of authorisation control is provided by the NOF through
  the decoration of the reflection peers (ActionPeer, OneToOnePeer and
  OneToManyPeer) and though an interface to an external security
  service.</para>

  <subheading>How it works</subheading>

  <para>The reflection peers <class>ActionAuthorisation</class>,
  <class>OneToOneAuthorisation</class> and
  <class>OneToManyAuthorisation</class> forward requests to the
  <class>AuthorisationManager</class> (all from the
  <class>org.nakedobjects.object.security</class> package) when the
  <class>ActionImpl</class>, <class>OneToOneAssociationImpl</class> and
  <class>OneToOneAssociationImpl</class> (from
  <class>org.nakedobjects.object.reflect</class>) classes call their
  <method>isAuthorised</method> method. The authorisation manager interface
  has only one method that determine if the action or field should be visible.
  This method takes a <class>Session</class> object and a
  <class>MemberIdentifier</class> (both from
  <class>org.nakedobjects.object</class>). The identifier contains the class
  name, member name and array of parameter names for the method to be
  executed, allowing the external system to determine what method is trying to
  be executed without any reference ti the NOF itself.</para>

  <subheading>Installation</subheading>

  <para>To install security you need to add the peer factory
  <class>org.nakedobjects.object.security.SecurityPeerFactory</class> to the
  specification loader, along with any other needed peer factories. This
  factory needs to be set up with a security manager via its
  <method>setAuthorisationManager</method> method. The following example does
  just that:-</para>

  <program-listing>JavaSpecificationLoader specificationLoader = new JavaSpecificationLoader();

SecrityPeerFactory peerFactory = new SecrityPeerFactory();
peerFactory.setAuthorisationManager(securityManager);
ReflectionPeerFactory[] factories = new ReflectionPeerFactory[] {
    peerFactory
};
specificationLoader.setReflectionPeerFactories(factories);</program-listing>

  <subheading>Extending this component</subheading>

  <para>To create a security manager (none are provided with the NOF) you must
  implement the
  <class>org.nakedobjects.object.security.AuthorisationManager</class> class,
  which is a <class>NakedObjectComponent</class>.</para>

  <para><comment>Add in javadoc refs</comment></para>
</section>