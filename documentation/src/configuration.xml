<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section SYSTEM "./documentation.dtd">
<section>
  <title>Configuration Component</title>

  <para>The configuratiin component provides the rest of the framework with a
  central place to access all the configuration properties. Each property is
  accessed by a fully qualified name and type. The
  <class>Configuration</class> class is concrete and therefore can only be
  subclassed, but it can be instantiated using a
  <class>ConfigurationLoader</class>, which loads the properties into the
  configuration.</para>

  <subheading>Installling this Component</subheading>

  <para>A configuration is installed by instantiating the
  <class>org.nakedobjects.container.configuration.Configuration</class> class.
  To load properties into the configuration pass in
  a<class>org.nakedobjects.container.configuration.ConfigurationLoader</class>
  into the constructor.</para>

  <para>The provided <class>ConfigurationLoader</class> is
  <class>org.nakedobjects.container.configuration.ConfigurationPropertiesLoader</class>,
  which loads the properties from a Java style properties file.</para>

  <para>Normal practice is to provide the properties in Java properties file
  and set up the configuration component using the provided properties
  loader:-</para>

  <program-listing>new Configuration(new ConfigurationPropertiesLoader("file.properties", false);</program-listing>

  <para>The flag determines if the file must be found and loaded; if true and
  the file cannot be found an exception is thrown.</para>

  <subheading>Using this Component</subheading>

  <para>The configuration component can be retrieved from
  <class>org.nakedobjects.NakedObjects</class> using the
  <method>getConfiguration</method> method.</para>

  <para>The configuration allows you to add properties to it, check it
  contains a specific property and get specific properties by name. The get
  methods return specific type such as boolean, integer, font, color and
  strings.</para>

  <minorheading>Programmatically configuring options</minorheading>

  <para>All of the configuration options can be set programmatically, which
  can be convienient when developing and running the exploration code,
  avoiding the need to create a separate configuration file. To add a
  key-value pair simply call the <method>add</method> method on the
  configuration object with a key <class>String</class> and a value
  <class>String</class>. To change the title style, for example, add the
  following to the <method>main</method> method:</para>

  <program-listing>NakedObjects.getConfiuration.add("nakedobjects.skylark.font.title", "Serif-bold-18");</program-listing>

  <comment>Add the javadoc methods</comment>

  <subheading>Extending this Component</subheading>

  <para>Implement a new
  <class>org.nakedobjects.container.configuration.ConfigurationLoader</class>
  and return the set of properties via the <method>getProperties()</method>
  method. Create an instance of this new class and pass into the constructor
  of the <class>Configuration</class> class when instantiating that.</para>
</section>