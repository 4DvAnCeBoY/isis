<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

	<groupId>org.apache.isis</groupId>
    <artifactId>trunk</artifactId>
    <version>0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    
    <name>[[NAME]]</name>
   	<description>
		Root POM for [[NAME]] core 
		framework and its plugins.
		Defines standard build process, as well as
		standard set of 3rd party dependencies
		(eg for testing and logging frameworks).
	</description>
    
	<!-- typical usage: -->

	<!-- mvn clean install -->
	<!-- mvn clean install -P build-all -->
	<!-- mvn deploy -P build-all -->
	<!-- mvn deploy -P build-all,deploy-remote -->

	<!-- mvn site-deploy -->
	<!-- mvn site-deploy -P site-all -->
	<!-- mvn site-deploy -P site-all,deploy-remote -->

    <scm>
        <connection>scm:svn:http://apache.isis.svn/svnroot/trunk</connection>
        <developerConnection>scm:svn:https://apache.isis.svn/svnroot/trunk</developerConnection>
        <url>http://dev.isis.apache.org/trac/browser/framework/trunk</url>
    </scm>

	<!-- used in Site generation for relative references -->
    <url>http://isis.apache.org</url>
    
   	<inceptionYear>2001</inceptionYear>
    
   	<organization>
		<name>[[NAME]] Contributors</name>
		<url>http://isis.apache.org</url>
	</organization>
    
   	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>manual</distribution>
		</license>
	</licenses>
    
    <properties>
		<compileSource>1.6</compileSource>
		<compileTarget>1.6</compileTarget>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!--
			fallback; submodules can override referencing the file locally to
			allow offline builds if required
		-->
		<checkstyle.configLocation>https://apache.isis.svn/svnroot/trunk/src/main/checkstyle/checkstyle.xml</checkstyle.configLocation>
		<!--
			fallback; submodules can override referencing the file locally to
			allow offline builds if required
		-->
		<pmd.ruleset>https://apache.isis.svn/svnroot/trunk/src/main/pmd/pmd.xml</pmd.ruleset>

		<!--
			used in distributionManagement; override using profiles or with -D
		-->
		<distributionManagement.repository.url>file:///tmp/m2-repo/release</distributionManagement.repository.url>
		<distributionManagement.snapshotRepository.url>file:///tmp/m2-repo/snapshot</distributionManagement.snapshotRepository.url>
		<distributionManagement.site.url>file:///tmp/m2-sites/isis</distributionManagement.site.url>

		<!--
		used by maven-pdf-plugin for site-docs in PDF format
		-->
		<pdf.author>[[NAME]] Contributors</pdf.author>
    	<pdf.title>Site Docs</pdf.title>
    	<pdf.outputName>site-docs</pdf.outputName>
    	
    	<!-- 
    	can be overridden as required
    	-->
    	<docbkx.title>${project.name}</docbkx.title>
    	<docbkx.outputName>${project.artifactId}</docbkx.outputName>
    	
    	<trunk.baseDir>${project.build.directory}/..</trunk.baseDir>
    </properties>
    
    <mailingLists>
    	<mailingList>
    		<name>contributors</name>
    		<archive>http://sourceforge.net/mailarchive/forum.php?forum_name=isis-contributors</archive>
    		<post>isis-contributors@lists.sourceforge.net</post>
    		<subscribe>https://lists.sourceforge.net/lists/listinfo/isis-contributors</subscribe>
    		<unsubscribe>https://lists.sourceforge.net/lists/listinfo/isis-contributors</unsubscribe>
    	</mailingList>
    </mailingLists>

	<developers>
		<developer>
			<id>rcmatthews</id>
			<name>Robert Matthews</name>
			<email>rmatthews@isis.apache.org</email>
			<organization>[[NAME]] Group Ltd.</organization>
			<organizationUrl>http://isis.apache.org</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>+0</timezone>
		</developer>
		<developer>
			<id>dkhaywood</id>
			<name>Dan Haywood</name>
			<email>dan@haywood-associates.co.uk</email>
			<organization>Haywood Associates Ltd.</organization>
			<organizationUrl>http://www.haywood-associates.co.uk</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>+0</timezone>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>Kevin Meyer</name>
		</contributor>
		<contributor>
			<name>Dave Slaughter</name>
		</contributor>
		<contributor>
			<name>Alexander Krasnuhkin</name>
		</contributor>
	</contributors>

	<issueManagement>
		<system>Trac</system>
		<url>http://dev.isis.apache.org/trac/report</url>
	</issueManagement>

	<ciManagement>
		<system>Hudson</system>
		<url>http://dev.isis.apache.org/hudson/</url>
		<notifiers>
			<notifier>
				<type>mail</type>
				<address>rmatthews@isis.apache.org</address>
				<sendOnError />
				<sendOnFailure />
				<sendOnSuccess />
				<sendOnWarning />
				<configuration />
			</notifier>
			<notifier>
				<type>mail</type>
				<address>dan@haywood-associatees.co.uk</address>
				<sendOnError />
				<sendOnFailure />
				<sendOnSuccess />
				<sendOnWarning />
				<configuration />
			</notifier>
		</notifiers>
	</ciManagement>

	<repositories>
		<repository>
			<id>isis-snapshot</id>
			<url>http://isis.apache.org/m2-repo/snapshot/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>isis-release</id>
			<url>http://isis.apache.org/m2-repo/release/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>Codehaus Repository</id>
			<url>http://repository.codehaus.org/</url>
		</pluginRepository>
	</pluginRepositories>

    <build>
		<extensions>
			<!--
				scp and sftp support for deployments.
			 -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>1.0-beta-6</version>
			</extension>
			<!--
				ftp support for deployments.
			 -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ftp</artifactId>
				<version>1.0-beta-6</version>
			</extension>
			<extension>
				<groupId>org.apache.maven.archetype</groupId>
				<artifactId>archetype-packaging</artifactId>
				<version>2.0-alpha-3</version>
			</extension>
		</extensions>

		<pluginManagement>
			<!--
				defines versions of plugins and the configuration for their
				non-reporting goals. Configuration of any reporting goals (aka
				reports) will be found in the reporting section.
			-->
			<plugins>
				<!--
					IDE support for Eclipse. (NetBeans 6.7+ and IDEA 7.0 have built-in
					support for Maven) Alternatively, use m2eclipse and import POMs
					directly.
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.6</version> <!-- version 2.7 & 2.8 presently have a bug that prevents multiple-resources from being filtered -->
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
					</configuration>
					<!--
						use mvn eclipse:eclipse (no goals bound to phases)
					-->
				</plugin>

				<!--
					Copies project resources to the output directory
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.4.3</version>
					<!--
						goal:resources binds to phase:process-resources
					-->
					<!--
						goal:testResources binds to phase:process-test-resources
					-->
				</plugin>

				<!--
					Compile
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.1</version>
					<configuration>
						<showDeprecation>false</showDeprecation>
						<showWarnings>false</showWarnings>
						<source>${compileSource}</source>
						<target>${compileTarget}</target>
					</configuration>
					<!--
						goal:compile binds to phase:compile
					-->
					<!--
						goal:testCompile binds to phase:test-compile
					-->
				</plugin>

				<!--
					Tests
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<junitArtifactName>junit:junit</junitArtifactName>
						<excludes>
							<exclude>**/Test*.java</exclude>
						</excludes>
						<printSummary>false</printSummary>
						<outputDirectory>${project.build.directory}/surefire-reports</outputDirectory>
					</configuration>
					<!--
						goal:test binds to phase:test
					-->
				</plugin>

				<!--
					Test Reporting
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.5</version>
					<!--
						goal:report is a report so is configured in the reporting section;
						invokes phase:test before running itself
					-->
				</plugin>


				<!--
					Test coverage: cobertura
				 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.4</version>
					<inherited>true</inherited>
					<!--
						goal:check binds to phase:verify (not currently configured, can be
						used to break build if code coverage < threshold)
					-->
					<!--
						goal:cobertura is a report so is configured in the reporting
						section; invokes phase:test before running itself
					-->
				</plugin>


				<!--
					Quality checks: checkstyle
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>2.5</version>
					<!--
						goal:check binds to phase:verify (not currently configured, can be
						used to break build if any violations)
					-->
					<!--
						goal:checkstyle is a report so is configured in the reporting
						section
					-->
				</plugin>

				<!--
					Quality checks: pmd
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>2.5</version>
					<!--
						goal:check binds to phase:verify (not currently configured, can be
						used to break build if any violations)
					-->
					<!--
						goal:check-cpd binds to phase:verify (not currently configured,
						can be used to break build if any CPD violations)
					-->
					<!--
						goal:pmd is a report so is configured in the reporting section
					-->
					<!--
						goal:cpd is a report so is configured in the reporting section
					-->
				</plugin>

				<!--
					Quality checks: findbugs
				-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>2.3.1</version>
					<inherited>true</inherited>
					<!--
						goal:check binds to phase:verify (not currently configured, can be
						used to break build if any violations)
					-->
					<!--
						goal:findbugs is a report so is configured in the reporting
						section
					-->
				</plugin>

				<!--
					Quality checks: NCSS (cyclomatic complexity)
				-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>javancss-maven-plugin</artifactId>
					<version>2.0</version>
					<!--
						goal:check binds to phase:verify (not currently configured, can be
						used to break build if any violations)
					-->
					<!--
						goal:report is a report so is configured in the reporting section
					-->
				</plugin>

				<!--
					Quality checks: jdepend
				-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jdepend-maven-plugin</artifactId>
					<version>2.0-beta-2</version>
					<!--
						goal:generate is a report so is configured in the reporting
						section
					-->
				</plugin>

				<!--
					Artifacts derived from code: taglist
				-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>taglist-maven-plugin</artifactId>
					<version>2.4</version>
					<inherited>true</inherited>
					<!--
						goal:taglist is a report so is configured in the reporting section
					-->
				</plugin>

				<!--
					Artifacts derived from code: javadoc; supports both build and
					report goals; not included as a build plugin except through
					profiles (to speed up the build)
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.7</version>
					<inherited>true</inherited>
					<configuration>
						<quiet>true</quiet>
						<doctitle>${project.name} ${project.version}</doctitle>
						<windowtitle>${project.name} ${project.version}</windowtitle>
						<testDoctitle>${project.name} ${project.version} (TEST API)
						</testDoctitle>
						<testWindowtitle>${project.name} ${project.version} (TEST API)
						</testWindowtitle>
						<splitindex>true</splitindex>
						<encoding>${project.build.sourceEncoding}</encoding>
						<links>
							<link>http://java.sun.com/j2se/1.6.0/docs/api</link>
							<link>http://java.sun.com/j2se/1.5.0/docs/api</link>
							<link>http://java.sun.com/j2se/1.4.2/docs/api</link>
							<link>http://java.sun.com/j2ee/1.4/docs/api</link>
						</links>
						<linksource>true</linksource>
						<!-- http://jira.codehaus.org/browse/MJAVADOC-268 and http://jira.codehaus.org/browse/MJAVADOC-284 -->
						<detectOfflineLinks>false</detectOfflineLinks>
					</configuration>
					<!--
						goal:aggregate (for aggregator modules) has no binding; explicitly
						bound in profiles
					-->
					<!--
						goal:jar (for non-aggregator modules) binds to phase:package
					-->
					<!--
						goal:test-jar (for non-aggregator modules) binds to phase:package
					-->
					<!--
						goal:javadoc is a report so is configured in the reporting section
					-->
				</plugin>


				<!--
					Artifacts derived from code: Java source x-ref
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>2.2</version>
					<!--
						goal:jxr is a report so is configured in the reporting section
					-->
				</plugin>


				<!--
					Packaging: source jars of main and test code
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
					<configuration>
						<includePom>true</includePom>
					</configuration>
					<!--
						goal:aggregate (for aggregator modules) binds to phase:package
					-->
					<!--
						goal:jar and goal:test-jar are meant to bind to phase:package, but
						doesn't seem to so bound explicitly
					-->
					<executions>
						<execution>
							<id>package-jars</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>


				<!--
					Packaging: jar
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.1</version>
					<!--
						goal:jar binds to phase:package
					-->
					<!--
						goal:test-jar supposedly binds to phase:package,
						but seems to need this explicit binding.
					-->
					<executions>
						<execution>
							<id>package-test-jar</id>
							<phase>package</phase>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>


				<!--
					Packaging: WAR
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.0.2</version>
					<configuration>
						<!-- This is broken in maven-war-plugin 2.0, but works in 2.0.1+ -->
						<warSourceExcludes>
							WEB-INF/lib/*.jar
						</warSourceExcludes>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathPrefix>lib/</classpathPrefix>
							</manifest>
						</archive>
					</configuration>
					<!--
						goal:war binds to phase:package
					-->
				</plugin>

				<!--
					PDF (from site docs)
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pdf-plugin</artifactId>
					<version>1.1</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.doxia</groupId>
							<artifactId>doxia-module-docbook-simple</artifactId>
							<version>1.1.3</version>
						</dependency>
					</dependencies>
					<!--
						goal:pdf has no binding; explicitly bind to phase:site
					-->
					<executions>
						<execution>
							<id>pdf</id>
							<phase>site</phase>
							<goals>
								<goal>pdf</goal>
							</goals>
							<configuration>
								<!--
									arrange for output to be with other reports generated in site
									phase
								-->
								<outputDirectory>${project.reporting.outputDirectory}</outputDirectory>
								<includeReports>false</includeReports>
								<!--
								REVIEW: want to set to 'false',
								but causes trunk, trunk/core to fail fatally
								(as opposed to failing silently otherwise...)
								-->
								<aggregate>true</aggregate>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!--
					PDF from DocBook (configured to build user guide and developers
					guide): docbkx hosted at
					http://docbkx-tools.sourceforge.net/docbkx-maven-plugin
				-->
				<plugin>
					<groupId>com.agilejava.docbkx</groupId>
					<artifactId>docbkx-maven-plugin</artifactId>
					<version>2.0.8</version>
					<!-- 
					doesn't seem to render the title page correctly?
					<version>2.0.10</version>
					-->
					<configuration>
						<includes>**/guide/*.xml</includes>
						<xincludeSupported>true</xincludeSupported>
						<highlightSource>1</highlightSource>
					</configuration>

					<!--
						goal:generate-html has not binding; explicitly bind to
						phase:package
					-->
					<executions>
						<execution>
							<id>html-docs</id>
							<phase>site</phase>
							<goals>
								<goal>generate-html</goal>
							</goals>

							<configuration>
								<excludes>old-src</excludes>
								<chunkedOutput>true</chunkedOutput>
								<htmlStylesheet>screen.css</htmlStylesheet>
								<htmlCustomization>${basedir}/src/docbkx/style/html-cust.xsl</htmlCustomization>
								<sectionAutolabel>1</sectionAutolabel>
								<sectionLabelIncludesComponentLabel>1</sectionLabelIncludesComponentLabel>
								<highlightSource>1</highlightSource>

								<postProcess>
									<copy todir="target/docbkx/html/guide" failonerror="false">
										<fileset dir="src/docbkx/guide">
											<include name="images/**/*" />
										</fileset>
										<fileset dir="src/docbkx/style">
											<include name="*.css" />
										</fileset>
									</copy>
									<copy todir="target/site/docbkx/html" failonerror="false">
										<fileset dir="target/docbkx/html">
											<include name="**/*" />
										</fileset>
									</copy>
								</postProcess>
							</configuration>
						</execution>

						<!--
							goal:generate-pdf has not binding; explicitly bind to
							phase:package
						-->
						<execution>
							<id>pdf-docs</id>
							<phase>site</phase>
							<goals>
								<goal>generate-pdf</goal>
							</goals>
							<configuration>
								<argLine>-Xmx1024m</argLine>
								<imgSrcPath>${basedir}/target/docbkx/pdf/</imgSrcPath>
								<foCustomization>${basedir}/src/docbkx/style/fop-cust.xsl
								</foCustomization>
								<highlightSource>1</highlightSource>
								<doubleSided>1</doubleSided>

								<preProcess>
									<copy todir="${basedir}/target/docbkx/pdf">
										<fileset dir="${basedir}/src/docbkx">
											<include name="images/**/*" />
										</fileset>
									</copy>

									<copy todir="${basedir}/target/docbkx/pdf" failonerror="false">
										<fileset dir="${basedir}/src/docbkx/guide">
											<include name="images/**/*" />
										</fileset>
									</copy>
								</preProcess>
								<postProcess>
									<copy todir="target/site/docbkx/pdf" failonerror="false">
										<fileset dir="target/docbkx/pdf">
											<include name="**/*" />
										</fileset>
									</copy>
								</postProcess>
							</configuration>
						</execution>
					</executions>

					<dependencies>
						<dependency>
							<groupId>org.docbook</groupId>
							<artifactId>docbook-xml</artifactId>
							<version>4.4</version>
							<scope>runtime</scope>
						</dependency>
						<dependency>
							<groupId>com.java</groupId>
							<artifactId>jimi</artifactId>
							<version>1.0</version>
						</dependency>
					</dependencies>
				</plugin>


				<!--
					site (see also reporting and distributionManagement)
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>2.1.1</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.doxia</groupId>
							<artifactId>doxia-module-docbook-simple</artifactId>
							<version>1.1.3</version>
						</dependency>
					</dependencies>
					<configuration>
						<locales>en</locales>
						<jarOutputDirectory>${project.build.directory}/site
						</jarOutputDirectory>
						<finalName>isis-${project.version}</finalName>
						<jarOutputDirectory>${project.reporting.outputDirectory}
						</jarOutputDirectory>
						<generateReports>true</generateReports>
						<generateSitemap>true</generateSitemap>
					</configuration>
					<!--
						goal:jar binds to phase:package; override to bind to (site
						lifecycle) phase:site
					-->
					<executions>
						<execution>
							<id>jar</id>
							<phase>site</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
					<!--
						goal:site binds to (site lifecycle) phase:site
					-->
					<!--
						goal:deploy binds to (site lifecycle) phase:site-deploy
					-->
				</plugin>


				<!--
					maven reports (for site)
				 -->
				<plugin>
				 	<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.1.2</version>
					<!--
						main configuration in reporting section (in inheriting modules)
					-->
				</plugin>


				<!--
					release (is also configured in descendant modules)
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.0</version>
					<configuration>
						<remoteTagging>true</remoteTagging>
						<preparationGoals>clean install</preparationGoals>
						<autoVersionSubmodules>true</autoVersionSubmodules>
					</configuration>
					<!--
						goal:clean (for aggregator modules) has no bindings; cleans up
						release.properties and any backup POM files
					-->
					<!--
						goal:prepare (for aggregator modules) has no bindings; prepares
						for release in SCM (modifying x.x-SNAPSHOT to x.x)
					-->
					<!--
						goal:update-versions (for aggregator modules) has no bindings;
						updates versions eg to SNAPSHOT
					-->
					<!--
						etc; none of the goals has a binding.
					-->
				</plugin>


				<!--
					deploy (see also distributionManagement)
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.5</version>
					<!--
						goal:deploy binds to phase:deploy
					-->
				</plugin>


				<!-- other types of build: archetype -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-archetype-plugin</artifactId>
					<version>2.0-alpha-5</version>
					<extensions>true</extensions>
					<!--
						no goals bind to any lifecycle phases; use mvn archetype:generate
					-->
				</plugin>


				<!--
					Runtime: jetty
				-->
	            <plugin>
	                <groupId>org.mortbay.jetty</groupId>
	                <artifactId>maven-jetty-plugin</artifactId>
	                <configuration>
	                    <webAppConfig>
	                        <contextPath>webapp</contextPath>
	                    </webAppConfig>
	                </configuration>
	            </plugin>

			</plugins>
		</pluginManagement>

		<!--
			build plugins; apply to all inheriting modules. Note that some
			plugins also come from the "super-POM" for the default bindings. For
			example, in the 'default' lifecycle, the resources, compiler,
			surefire, jar, install and deploy plugins are automatically included
			because they provide the default bindings. For the 'site' lifecycle,
			the site plugin is automatically included.
		-->
        <plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pdf-plugin</artifactId>
			</plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-release-plugin</artifactId>
               <configuration>
                   <remoteTagging>true</remoteTagging>
                   <preparationGoals>clean verify</preparationGoals>
                   <autoVersionSubmodules>false</autoVersionSubmodules>
                   <tagBase>https://apache.isis.svn/svnroot/tags</tagBase>
               </configuration>
            </plugin>           

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<inherited>false</inherited>
				<reportSets>
					<reportSet>
						<inherited>false</inherited>
						<reports>
							<report>license</report>
							<report>project-team</report>
							<report>dependency-management</report>
							<report>issue-tracking</report>
							<report>scm</report>
							<report>cim</report>
							<report>mailing-list</report>
							<report>dependency-management</report>
							<report>plugin-management</report>
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
   
	<dependencyManagement>
		<dependencies>

			<!-- Logging -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.16</version>
			</dependency>

			<!-- Apache Commons -->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.5</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.1.1</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.1</version>
			</dependency>
			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>3.1</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.4</version>
			</dependency>

			<!-- Google Guava (collections and commons) -->
			<dependency>
			    <groupId>com.google.guava</groupId>
			    <artifactId>guava</artifactId>
			    <version>r06</version>
			</dependency>

			<!-- Google Guice (dependency injection) -->
			<dependency>
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>2.0</version>
			</dependency>

			<!-- FindBugs annotations (code static analysis support) -->
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>annotations</artifactId>
				<version>1.3.9</version>
			</dependency>

			<!-- Bytecode libraries -->
			<dependency>
				<groupId>asm</groupId>
				<artifactId>asm</artifactId>
				<version>3.1</version>
			</dependency>
			<dependency>
				<groupId>org.objenesis</groupId>
				<artifactId>objenesis</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>2.1_3</version>
			</dependency>
			<dependency>
				<groupId>javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>3.8.0.GA</version>
			</dependency>

			<!-- XML libraries -->
			<dependency>
				<groupId>crimson</groupId>
				<artifactId>crimson</artifactId>
				<version>1.1.3</version>
			</dependency>
			<dependency>
				<groupId>xom</groupId>
				<artifactId>xom</artifactId>
				<version>1.2.5</version>
			</dependency>
	        <dependency>
	            <groupId>dom4j</groupId>
	            <artifactId>dom4j</artifactId>
	            <version>1.4</version>
	        </dependency>

			<!-- predicate libraries -->
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-core</artifactId>
				<version>1.1</version>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.1</version>
			</dependency>

			<!-- Web development -->
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty</artifactId>
				<version>6.1.24</version>
			</dependency>

			<!--
				Testing libraries (not scope=test because used by headless-junit)
			-->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.8.1</version>
			</dependency>

			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock</artifactId>
				<version>2.5.1</version>
			</dependency>

			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock-junit4</artifactId>
				<version>2.5.1</version>
			</dependency>

			<!--
				transitively includes cglib:cglib-nodep:2.1_3 and
				org.objenesis:objenesis:1.0
			-->
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock-legacy</artifactId>
				<version>2.5.1</version>
			</dependency>

			<!--
			Testing libraries (scope=test)
			-->
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>2.5.2</version>
				<scope>test</scope>
			</dependency>

			<!-- Specs -->
			<dependency>
				<groupId>geronimo-spec</groupId>
				<artifactId>geronimo-spec-jta</artifactId>
				<version>1.0.1B-rc1</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.3</version>
				<scope>provided</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- compile dependencies -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>annotations</artifactId>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-junit4</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock-legacy</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<distributionManagement>
		<repository>
			<id>isis-release</id>
			<name>[[NAME]] Release Repository</name>
			<url>${distributionManagement.repository.url}</url>
		</repository>
		<snapshotRepository>
			<id>isis-snapshot</id>
			<name>[[NAME]] Snapshot Repository</name>
			<url>${distributionManagement.snapshotRepository.url}</url>
			<uniqueVersion>false</uniqueVersion>
		</snapshotRepository>
		<site>
			<id>isis-site</id>
			<name>[[NAME]] Site</name>
			<url>${distributionManagement.site.url}</url>
		</site>
	</distributionManagement>

	<profiles>
		<profile>
			<id>build-all</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<!--
								goal:aggregate (for aggregator modules) has no binding; binding
								explicitly
							-->
							<execution>
								<id>aggregate-submodules</id>
								<phase>package</phase>
								<goals>
									<goal>aggregate</goal>
								</goals>
							</execution>
							<!--
								goal:jar (for non-aggregator modules) is meant to bind to
								phase:package, but does not seem to; binding explicitly
							-->
							<execution>
								<id>attach-jar</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
							<!--
								goal:test-jar (for non-aggregator modules) binds to
								phase:package; have chosen not to bind
							-->
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>site-all</id>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<configuration>
							<configLocation>${checkstyle.configLocation}</configLocation>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<configuration>
							<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
							<minimumTokens>100</minimumTokens>
							<linkXref>true</linkXref>
							<targetJdk>${compileTarget}</targetJdk>
							<rulesets>
								<ruleset>${pmd.ruleset}</ruleset>
							</rulesets>
							<excludeRoots>
								<excludeRoot>${project.build.directory}/generated-sources/modello
								</excludeRoot>
								<excludeRoot>${project.build.directory}/generated-sources/plugin
								</excludeRoot>
							</excludeRoots>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>javancss-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>jdepend-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>taglist-maven-plugin</artifactId>
						<configuration>
							<!--
								causes out of memory <aggregate>true</aggregate>
							-->
							<tagListOptions>
								<tagClasses>
									<tagClass>
										<displayName>Todo Work</displayName>
										<tags>
											<tag>
												<matchString>todo</matchString>
												<matchType>ignoreCase</matchType>
											</tag>
											<tag>
												<matchString>FIXME</matchString>
												<matchType>exact</matchType>
											</tag>
											<tag>
												<matchString>REVIEW</matchString>
												<matchType>exact</matchType>
											</tag>
											<tag>
												<matchString>hack</matchString>
												<matchType>ignoreCase</matchType>
											</tag>
										</tags>
									</tagClass>
								</tagClasses>
							</tagListOptions>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
						<configuration>
							<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
							<linkJavadoc>true</linkJavadoc>
							<javadocDir>${project.build.directory}/apidocs</javadocDir>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<quiet>true</quiet>
							<doctitle>${project.name} ${project.version}</doctitle>
							<windowtitle>${project.name} ${project.version}</windowtitle>
							<testDoctitle>${project.name} ${project.version} (TEST API)
							</testDoctitle>
							<testWindowtitle>${project.name} ${project.version} (TEST API)
							</testWindowtitle>
							<splitindex>true</splitindex>
							<encoding>${project.build.sourceEncoding}</encoding>
							<links>
								<link>http://java.sun.com/j2se/1.6.0/docs/api</link>
								<link>http://java.sun.com/j2se/1.5.0/docs/api</link>
								<link>http://java.sun.com/j2se/1.4.2/docs/api</link>
								<link>http://java.sun.com/j2ee/1.4/docs/api</link>
							</links>
							<linksource>true</linksource>
							<!-- http://jira.codehaus.org/browse/MJAVADOC-268 and http://jira.codehaus.org/browse/MJAVADOC-284 -->
							<detectOfflineLinks>false</detectOfflineLinks>
						</configuration>
						<reportSets>
							<reportSet>
								<reports>
									<report>javadoc</report>
									<report>test-javadoc</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>

					<!--
						TO LOOK INTO <plugin> <groupId>org.codehaus.sonar</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>1.10.1</version> </plugin>
					-->

					<!--
						TO LOOK INTO <plugin> <groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changelog-plugin</artifactId> <reportSets>
						<reportSet> <id>dual-report</id> <configuration>
						<type>range</type> <range>10</range> </configuration> <reports>
						<report>changelog</report> <report>file-activity</report>
						</reports> </reportSet> </reportSets> </plugin>
					-->

					<!--
						TO LOOK INTO <plugin> <groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changes-plugin</artifactId> <configuration>
						<query>status=accepted&amp;status=assigned&amp;status=new&amp;status=reopened&amp;order=priority</query>
						</configuration> </plugin>
					-->
				</plugins>
			</reporting>
		</profile>
		<profile>
			<id>deploy-remote</id>
			<!--
				to deploy remotely to [[NAME]]'s SF repo (and for staging to central repo)
			-->
			<properties>
				<distributionManagement.repository.url>sftp://www.apache.isis.dev/m2/repo/release</distributionManagement.repository.url>
				<distributionManagement.snapshotRepository.url>sftp://www.apache.isis.dev/m2/repo/snapshot</distributionManagement.snapshotRepository.url>
				<distributionManagement.site.url>scp://shell.sourceforge.net/home/groups/n/na/isis/m2/site</distributionManagement.site.url>
			</properties>
		</profile>
		<profile>
			<id>deploy-star</id>
			<!-- to deploy into the sister objects' (starobjects.org) repos -->
			<properties>
				<distributionManagement.repository.url>sftp://web.sourceforge.net/home/groups/s/st/starobjects/htdocs/m2-repo/release</distributionManagement.repository.url>
				<distributionManagement.snapshotRepository.url>sftp://web.sourceforge.net/home/groups/s/st/starobjects/htdocs/m2-repo/snapshot</distributionManagement.snapshotRepository.url>
				<distributionManagement.site.url>scp://shell.sourceforge.net/home/groups/s/st/starobjects/htdocs/m2-no-site</distributionManagement.site.url>
			</properties>
		</profile>

		<profile>
			<id>standard</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		 	<modules>
		        <module>applib</module>
		        <module>core</module>
		        <module>extensions</module>
		        <module>release</module>
		   </modules>
		</profile>
   	    <profile>
   	        <id>site-skin</id>
            <modules>
               <module>site-skin</module>
           	</modules>
   	    </profile>
   	    <profile>
   	        <id>core</id>
            <modules>
		       <module>applib</module>
               <module>core</module>
		       <module>release</module>
           	</modules>
   	    </profile>
   	    <profile>
   	        <id>extensions</id>
            <modules>
               <module>extensions</module>
           	</modules>
   	    </profile>
   	    <profile>
   	        <id>support</id>
            <modules>
               <module>release</module>
               <module>distribution</module>
               <module>archetypes</module>
           	</modules>
   	    </profile>
    </profiles>
  
</project>
