~~  Licensed to the Apache Software Foundation (ASF) under one
~~  or more contributor license agreements.  See the NOTICE file
~~  distributed with this work for additional information
~~  regarding copyright ownership.  The ASF licenses this file
~~  to you under the Apache License, Version 2.0 (the
~~  "License"); you may not use this file except in compliance
~~  with the License.  You may obtain a copy of the License at
~~
~~        http://www.apache.org/licenses/LICENSE-2.0
~~
~~  Unless required by applicable law or agreed to in writing,
~~  software distributed under the License is distributed on an
~~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~  KIND, either express or implied.  See the License for the
~~  specific language governing permissions and limitations
~~  under the License.



Where to Start?

  There's quite a lot to <Apache Isis>, with lots of optional components.  
  But you can get up and working quickly just by running our quickstart
  archetype.  To use it, first create a new directory, and 'cd' into 
  that directory.   Then run the following command:
  

+------------------------------------------------------------
mvn archetype:generate  \
    -D archetypeGroupId=org.apache.isis \
    -D archetypeArtifactId=quickstart-archetype \
    -D groupId=com.mycompany \
    -D artifactId=myapp

+------------------------------------------------------------

  The {{{./quickstart-app.html}quickstart app}} page has more detail 
  of the generated application and how to run it.

  Note: <currently the archetype is only available from the Apache snapshot
  repository; hence the need to specify the archetypeCatalog property to pick
  it up.  When we get our first release out, the archetype will be available 
  in the Maven central repo and this property will not be required>.

Documentation

  Over and above running the archetype, you'll probably want to read some 
  documentation to figure out what Isis offers.  To keep things manageable, 
  all Isis documentation about these components is scoped closest along with 
  that component.  That means that any given documentation is likely to have 
  just the information you 
  require to use or configure that component (it also makes it easier for us
  to maintain those documents).
  
  On the other hand, it can be difficult to know exactly where to go in the 
  first place... hence these notes.
  
  <<Your first port of call should be the {{{./applib/docbkx/pdf/isis-applib.pdf}applib}}  
  documentation>>.  This describes how to go about writing a domain application following
  Isis' programming model.
  
  After that, you probably should look through the {{{./core/docbkx/pdf/isis-core.pdf}core}}
  documentation.  This provides more detail on the design and architecture of Isis, along
  with the key APIs.
  
  Once you have an understanding of those APIs, you'll probably want to delve into individual
  implementations of the APIs, such as the programming model, security, viewers or the
  runtime (persistence).  You'll find documentation for all of these components {{{./documentation.html}here}}.
  
What Else is There?  
  
  To speed up your coding we provide some templates and other help for IDEs; 
  check out the {{{./ide-support.html}IDE support}} page.  
    
  In the future, we also hope to provide a selection of off-the-shelf domain 
  services and value types integrations for you to reuse; these will be hosted
  within a "domain" library. (Until then, why 
  not contribute some of your own ? ;-).

   
  []
